Laboratório 9 Software Básico - 3WB - 2023.1 - João Pedro Biscaia Fernandes

1-) O código em assembly fica da seguinte forma:


.globl add
.text
  
    add:
        movl %edi, %eax
        addl %esi, %eax
        addl %edx, %eax
ret


2-)A alteração fica da seguinte forma:
.globl fat

.text
fat:
  pushq %rbp
  movq %rsp, %rbp
  subq $16, %rsp
  cmpl $0, %edi
  jne L2
  movl $1, %eax
  jmp L1

L2:
  movl %edi, %ebx
  subl $1, %ebx
  movl %edi, -8(%rbp)
  movl %ebx, %edi
  call fat
  movl -8(%rbp), %r12d
  imull %eax, %r12d
  movl %r12d, %eax

L1:
    leave
    ret
  
Na função, guardo o valor do parâmetro recebido na pilha, pois já que é chamada de novo iria perder se não acontecesse. Assim, passo o valor subtraído para edi, chamo a função
e depois multiplico o valor recebido (eax) pelo valor tirado da pilha.


3-)
A alteração fica da seguinte forma:

.globl foo

.text
foo:
  pushq %rbp
  movq %rsp, %rbp

  movl $0, %ebx   /* i = 0*/
  movl $0, %ecx  /* s = 0 // como não chamo função, não tem problema usar o registrador que seria o quarto parâmetro.*/
  
  movq %rdi, %r12


Loop:

  cmpl %esi, %ebx
  je L1

  movq %r12, %r13
  movl %ebx, %edx
  imull $4, %edx
  addq %rdx, %r13
  addl (%r13), %ecx
  addl $1, %ebx

  cmpl $0, (%r13)
  jne Cont

  movl %ecx, (%r13)
  movl $0, %ecx

Cont: 
  jmp Loop

L1:
  leave
  
